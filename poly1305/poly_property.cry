import poly_openssl
import poly_openssl64
import poly_rfc

//property1
property Poly1305KeyDiff1 key1 key2 msg = if Poly1305 key1 msg != Poly1305 key2 msg
                                            then key1 != key2 
                                            else True
//:prove Poly1305KeyDiff1 : [256] -> [256] -> [32][8] -> Bit

property Poly1305KeyDiff2 key1 key2 msg = if poly_mac key1 msg != poly_mac key2 msg
                                            then key1 != key2 
                                            else True
//:prove Poly1305KeyDiff2 : [32][8] -> [32][8] -> [32][8] -> Bit

//property2 
PolyCorrect : {n}(fin n, n>=16, 32 >= width n) => [32][8] -> [n][8] -> [n][8] -> Bit
property PolyCorrect key inp1 inp2 = if poly_mac key inp1 != poly_mac key inp2
                                            then inp1 != inp2
                                            else True
//:prove PolyCorrect : [32][8] -> [32][8] -> [32][8] -> Bit

property Poly1305MsgDiff key msg1 msg2 = if Poly1305 key msg1 != Poly1305 key msg2
                                            then msg1 != msg2 
                                            else True
//:prove Poly1305MsgDiff : [256] -> [32][8] -> [32][8] -> Bit

//property3
find : {m} (fin m) => [256] -> [m][8] -> [m][8] -> Bit
property find key msg1 msg2 = Poly1305 key msg1 == Poly1305 key msg2
                                /\ msg1 != msg2
//:prove find : [256] -> [32][8] -> [32][8] -> Bit


PolyEqual : {n}(fin n, n>=16, 32 >= width n) => [32][8] -> [n][8] -> Bit
property PolyEqual key inp = poly_mac key inp == poly_mac2 key inp
//:prove PolyEqual : [32][8] -> [32][8] -> Bit

PolyEqual2 : {n}(fin n, n>=16, 32 >= width n) => [32][8] -> [n][8] -> Bit
property PolyEqual2 key inp = poly_mac key inp == Poly1305 (join key) inp
//:prove PolyEqual : [32][8] -> [1024][8] -> Bit


PolyFind : {m} (fin m) => [256] -> [m][8] -> Bit
property PolyFind key inp1 = Poly1305 key inp1 == [0x11, 0x13, 0x23, 0xfe, 0xac, 0xbb, 0xee, 0xae, 0x11, 0x13, 0x23, 0xfe, 0xac, 0xbb, 0xee, 0xae]
//:sat PolyFind : [256] -> [1024][8] -> Bit